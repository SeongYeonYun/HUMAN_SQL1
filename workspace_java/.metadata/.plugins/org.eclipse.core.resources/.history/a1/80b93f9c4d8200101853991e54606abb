package Filedownload;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class Filedownload
 */
@WebServlet("/download")
public class Filedownload extends HttpServlet {
	private static final long serialVersionUID = 1L;
       

    public Filedownload() {
        super();
        // TODO Auto-generated constructor stub
    }


	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		String filename = request.getParameter("filename");
		String path = "c:\\tmp\\upload";
		File file = new File(path + "\\" + filename );
		
		response.setHeader("Cache-Control", "no-cache");
		response.addHeader("Content-dispostion", "attatchment; fileName =" + filename); 
//		response.addHeader("Content-dispostion", "attatchment; fileName = a_txt"); 
		//무엇을 다운받든 a.txt파일로 저장함
		//지금 받은 파일이 첨부파일이고 파일이름이 무엇인지
		//?????????????????? 헤더 왜 설정해?????????????????????????????
//		브라우저가 보낸 데이터를 어떻게 처리할지 정한다.
//		헤더를 설정하지 않으면 캐시 때문에 최신 파일이 아닌 예전 파일을 받는데 문제가 생길수 있다??
		
		//?????????????????? 왜 다운로드가 안되지????????????????????????
		
		
		//파일 열기
		InputStream is = new FileInputStream(file);
		
		//메모리로 퍼올릴 바가지 크기 설정
		byte[] BUF = new byte[1024*8]; //보통 8kb
		
		
		//브라우저로 내보낼 객체
		OutputStream os = response.getOutputStream();
		
		//얼마나 읽었는가??
		int count = -1;
		//아직 안읽었으니까
		
		while((count = is.read(BUF)) != -1) {
			//바가지 크기 만큼 읽어서 없으면 count = is.read(BUF) =-1
			//0 : offset 지금 읽은 것에서 얼마나 건너뛸지
			//count : 보낼 Byte수
			os.write(BUF,0,count);
			
		}
		os.flush(); //원래 꽉 차면 출발하는데 플러쉬를 하면 다 차지 않더라도 간다.
		os.close();
		is.close();
		
		
	}


	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

	}

}
