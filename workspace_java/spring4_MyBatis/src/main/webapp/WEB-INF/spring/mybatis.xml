<?xml version="1.0" encoding="UTF-8"?>
<beans
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans">

	<!-- jdbc.properties 파일 로딩 -->
	<bean id="propertyPlaceholderConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>/WEB-INF/config/jdbc/jdbc.properties</value>
		</property>
	</bean>
	
	<!-- DB 접속 -->
	<bean id="dataSource" class="org.apache.ibatis.datasource.pooled.PooledDataSource">
	 <!--  el 테그를 쓰기 위해 9번줄이 있다-->
		<property name="driver" value="${jdbc.driverClassName}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		
		<!-- 밑에 둘은 뭐지??? el 테그를 쓰기 위해 9번줄이 있다 -->
		<property name="configLocation" value="classpath:mybatis/model/modelConfig.xml"></property>
		<property name="mapperLocations" value="classpath:mybatis/mappers/*.xml"></property> 
	</bean>


	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
	<!-- 
		constructor -> 생성자, index = 0 -> 첫번째라는 뜻, autowired 가 sql session을 불러오럭다
		
		SqlSessionFactoryBean sqlSessionFactory = new SqlSessionFactoryBean();
		
		String jdbc.driverCalssName = "oracle,jdbc.driver.OracleDriver";
		
		PooledDataSource datasource = new PooledDataSource();
		datasource.setDriver(jdbc.driverClassName);
		
		
		sqlSessionFactory.serDataSource(datascource) 	;
		sqlSessionFactory.serConfigLocation("classpath ~~~~~~~~") 	;
	 -->

</beans>
















