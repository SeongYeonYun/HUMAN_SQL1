<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.emp">
	<!-- id 는 구분을 하는 조합 요소,  -->
	
	
	<select id = "selectEmp" resultType = "kr.or.human4.dto.EmpDTO">
		select * from emp2	
	</select>
	
	
	<select id = "selectOneEmp" resultType = "kr.or.human4.dto.EmpDTO">
		select * from emp2	
		where empno = 7788
	</select>
	
	
<!-- 	<select id = "selectOneEmpMap" resultType = "java.util.HashMap"> -->
	<select id = "selectOneEmpMap" resultType = "hashMap">
		select * from emp2	
		where empno = 7788
	</select>
	
<!-- 	<select id = "selectEmpno" resultType = "kr.or.human4.dto.EmpDTO" parameterType = "java.long.integer"> -->
	<select id = "selectEmpno" resultType = "kr.or.human4.dto.EmpDTO" parameterType = "int">
		select * from emp2	
		where empno = #{_parameter} <!-- 대부분 어떤 내용이든 상관 없지만 약속된 문자인 _parameter을 추가 한다.  -->
	</select>
	
	
	<select id = "selectEname" resultType = "kr.or.human4.dto.EmpDTO" parameterType = "string">
	
		select * from emp2 
		where ename = #{_parameter}
		
	</select>
	
	<select id = "selectJob" resultType = "empDTO" parameterType  = "string">
		select * from emp2
		 where job = #{_parameter}
		 <!-- 
		 
		 #{} : ''를 자동으로 붙혀줌
		 들어온 값이 숫자면 123, 문자면 'ㄴㅇㄴㅇ' 
		
		 ${} : ''를 안붙힘
		 where ename = King -> 변수로 인식
		 where ename = '${_parameter}' -> 역으로 해킹이 가능하다. sqlinjection 가능, sql문 자체를 변수로 받을때 쓰기는 함
		 
		 ex -> '' or '1' !=2
		  -->
	
	</select>
		
<!-- 	<select id = "selectEmpnoEname" resultType = "kr.or.human4.dto.EmpDTO" parameterType = "EmpDTO"> -->
	
<!-- 		select * from emp2  -->
<!-- 		where empno = #{empno} and ename = #{ename} -->
		<!--  getter 가 실행된다 -->
		
<!-- 	</select> -->

<select id="selectEmpnoEname"
        resultType="kr.or.human4.dto.EmpDTO"
        parameterType="kr.or.human4.dto.EmpDTO">
    select * from emp2
    where empno = #{empno} and ename = #{ename}
</select>
	
	
</mapper>




